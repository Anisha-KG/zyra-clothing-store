<%- include("../../views/partials/admin/header")%>
<style>
    /* Table header dark brown */
    .table-head th {
        background-color: #a3654b !important;
        color: #0e0d0d !important;
    }
</style>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- Main Content -->
<main class="col-12 col-md-10 px-3 pt-3">

    <!-- Page Header & Search -->
    <div class="d-flex justify-content-between align-items-center my-3">
        <h4><strong>Brands</strong></h4>
        <div class="d-flex gap-2">
            <form class="d-flex gap-2">
                <input type="text" name="search" id="searchInput" placeholder="Search brand..." class="form-control"
                    style="width: 250px;" value="<%= typeof search !== 'undefined' ? search : '' %>"
                    autocomplete="off" />
                <button class="btn btn-dark btn-sm" type="submit">Search</button>
                <% if (search) { %>
                    <a href="/admin/brands" class="btn btn-outline-secondary btn-sm">Clear</a>
                <% } %>
            </form>

            <!-- Add Brand Button -->
            <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#addBrandModal">
                <i class="bi bi-plus-lg me-1"></i> Add Brand
            </button>
        </div>
    </div>

    <!-- Brands Table -->
    <div class="table-responsive bg-white p-3 rounded shadow-sm">
        <table class="table align-middle table-hover">
            <thead class="table-head">
                <tr>
                    <th>Sl No</th>
                    <th>Brand Name</th>
                    <th>Image</th>
                    <th>Status</th>
                    <th>Offer</th>
                    <th>Valid Until</th>
                    <th>Add Offer</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
            <% if (data.length === 0) { %>
            <tr>
              <td colspan="8" class="text-center">No customers found</td>
            </tr>
            <% } %>
            <% data.forEach((brand,index)=>{ %>
                <tr>
                    <td><%= index+1%></td>
                    <td><%= brand.brandName%></td>
                    <td>
                        <img src="<%= brand.brandLogo ? '/uploads/brands/' + brand.brandLogo : 'https://via.placeholder.com/40' %>"
                            class="brand-img" width="40" height="40">
                    </td>
                    <td class="action-icons">
                        <% if (brand.isListed) { %>
                            <button onclick="unlistBrand('<%= brand._id%>')" class="btn btn-success btn-sm"
                                title="Click to Unlist">Listed</button>
                        <% } else { %>
                            <button onclick="listBrand('<%= brand._id%>')" class="btn btn-danger btn-sm"
                                title="Click to List">Unlisted</button>
                        <% } %>
                    </td>
                    <td><%= brand.brandOffer ? brand.brandOffer + "%" : "-" %></td>
                    <% let formattedDate=brand.endDate ? new Date(brand.endDate).toLocaleDateString('en-GB') : "-" ; %>
                    <td><%= formattedDate %></td>
                    <td>
                        <% if (brand.brandOffer) { %>
                            <button class="btn btn-sm btn-outline-danger" onclick="removeOffer('<%= brand._id %>')">
                                Remove Offer
                            </button>
                        <% } else { %>
                            <button class="btn btn-sm btn-outline-primary" onclick="openAddOfferModal('<%= brand._id %>')">
                                Add Offer
                            </button>
                        <% } %>
                    </td>
                    <td class="action-icons">
                        <a href="#" title="Edit" data-bs-toggle="modal" data-bs-target="#editBrandModal"
                           onclick="setEditmodal('<%= brand._id%>','<%= brand.brandName%>','<%= brand.brandLogo%>')">
                            <i class="fas fa-edit text-primary"></i>
                        </a>
                        <a href="#" title="Delete" onclick="deleteBrand('<%= brand._id %>')">
                            <i class="fas fa-trash text-danger"></i>
                        </a>
                    </td>
                </tr>
            <% }) %>
            </tbody>
        </table>

        <!-- ADD BRAND MODAL -->
        <div class="modal fade" id="addBrandModal" tabindex="-1" aria-labelledby="addBrandModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-md">
                <div class="modal-content p-4 rounded-4 border-0">
                    <form id="addBrandForm" enctype="multipart/form-data" method="POST" action="/admin/addBrand" onsubmit="addBrand(event)">

                        <div class="modal-header p-3 mb-3" style="background-color: #a05a3b; border-radius: 0.5rem;">
                            <h5 class="modal-title text-white fw-bold" id="addBrandModalLabel">Add Brand</h5>
                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>

                        <div class="modal-body">
                            <div class="row g-3">
                                <div class="col-12">
                                    <label for="brandName" class="form-label fw-semibold">Brand Name</label>
                                    <input type="text" name="brandName" class="form-control rounded-3" id="brandName" />
                                    <div id="nameError" class="error-msg"></div>
                                </div>

                                <div class="col-12">
                                    <label for="brandImage" class="form-label fw-semibold">Logo</label>
                                    <input type="file" name="brandLogo" id="brandImage" class="form-control rounded-3" accept="image/png, image/jpeg" />
                                    <div id="imageError" class="error-msg"></div>
                                </div>
                            </div>
                        </div>

                        <div class="modal-footer border-0 mt-3">
                            <div class="d-flex justify-content-end gap-2">
                                <button type="reset" class="btn btn-outline-secondary rounded-3 px-4">Cancel</button>
                                <button type="submit" class="btn" style="background-color: #a05a3b; color: white;">Save Brand</button>
                            </div>
                        </div>

                    </form>
                </div>
            </div>
        </div>

        <!-- ADD BRAND OFFER MODAL -->
        <div class="modal fade" id="addOfferModal" tabindex="-1" aria-labelledby="addOfferModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-md">
                <div class="modal-content p-4 rounded-4 border-0">
                    <form id="addOfferForm" onsubmit="addBrandOffer(event)" method="POST" action="/admin/addBrandOffer">

                        <div class="modal-header p-3 mb-3" style="background-color: #a05a3b; border-radius: 0.5rem;">
                            <h5 class="modal-title text-white fw-bold" id="addOfferModalLabel">Add Brand Offer</h5>
                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>

                        <input type="hidden" name="brandId" id="offerBrandId" value="">

                        <div class="modal-body">
                            <div class="row g-3">
                                <div class="col-12">
                                    <label for="offerPercentage" class="form-label fw-semibold">Offer Percentage (%)</label>
                                    <input type="number" name="offerPercentage" class="form-control rounded-3"
                                        id="offerPercentage" placeholder="Enter percentage (e.g. 10)" />
                                </div>

                                <div class="col-12">
                                    <label for="startDate" class="form-label fw-semibold">Start Date & Time</label>
                                    <input type="datetime-local" name="startDate" class="form-control rounded-3" id="startDate"  />
                                </div>

                                <div class="col-12">
                                    <label for="endDate" class="form-label fw-semibold">End Date & Time</label>
                                    <input type="datetime-local" name="endDate" class="form-control rounded-3" id="endDate"  />
                                </div>
                            </div>
                        </div>

                        <div class="modal-footer border-0 mt-3">
                            <div class="d-flex justify-content-end gap-2">
                                <button type="reset" class="btn btn-outline-secondary rounded-3 px-4">Cancel</button>
                                <button type="submit"  class="btn" style="background-color: #a05a3b; color: white;">Save Offer</button>
                            </div>
                        </div>

                    </form>
                </div>
            </div>
        </div>

        <!-- EDIT BRAND MODAL -->
        <div class="modal fade" id="editBrandModal" tabindex="-1" aria-labelledby="editBrandModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-md">
                <div class="modal-content p-4 rounded-4 border-0">
                    <form id="editBrandForm" onsubmit="editBrand(event)" enctype="multipart/form-data" method="POST" action="#">
                        <input type="hidden" id="edit-brand-id" name="brandId" />

                        <div class="modal-header p-3 mb-3" style="background-color: #a05a3b; border-radius: 0.5rem;">
                            <h5 class="modal-title text-white fw-bold" id="editBrandModalLabel">Edit Brand</h5>
                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>

                        <div class="modal-body">
                            <div class="row g-3">
                                <div class="col-12">
                                    <label for="edit-brand-name" class="form-label fw-semibold">Brand Name</label>
                                    <input type="text" name="brandName" class="form-control rounded-3" id="edit-brand-name" />
                                    <div id="editNameError" class="error-msg"></div>
                                </div>

                                <!--<div class="col-12">
                                    <label for="edit-brand-description" class="form-label fw-semibold">Description</label>
                                    <textarea name="description" class="form-control rounded-3" id="edit-brand-description" rows="3"></textarea>
                                    <div id="editDescriptionError" class="error-msg"></div>
                                </div>-->

                                <div class="col-12">
                                    <label class="form-label fw-semibold">Current Image</label><br />
                                    <img id="existing-brand-image" src="" alt="Brand Image" style="width: 100px; height: 100px; object-fit: cover; border-radius: 6px" />
                                </div>

                                <div class="col-12">
                                    <label for="edit-brand-image-upload" class="form-label fw-semibold">Change Image (optional)</label>
                                    <input type="file" name="brandLogo" id="edit-brand-image-upload" class="form-control rounded-3" accept="image/png, image/jpeg" />
                                    <div id="editImageError" class="error-msg"></div>
                                </div>
                            </div>
                        </div>

                        <div class="modal-footer border-0 mt-3">
                            <div class="d-flex justify-content-end gap-2">
                                <button type="button" class="btn btn-outline-secondary rounded-3 px-4" data-bs-dismiss="modal">Cancel</button>
                                <button type="submit" class="btn" style="background-color: #a05a3b; color: white;">Update Brand</button>
                            </div>
                        </div>

                    </form>
                </div>
            </div>
        </div>

        <!-- Pagination -->
        <div class="d-flex justify-content-center mt-4">
            <nav>
                <ul class="pagination pagination-sm mb-0">
                    <% for(let i=1;i<=totalPages;i++){ %>
                        <li class="page-item <%= i===currentPage?'active':''%>">
                            <a class="page-link" href="/admin/brands?page=<%= i%><%= search?'&search='+search:'' %>"><%= i %></a>
                        </li>
                    <% } %>
                </ul>
            </nav>
        </div>

    </div>
</main>

<script>
    async function addBrand(e){
        e.preventDefault();
        const form = document.getElementById('addBrandForm')
        const formdata = new FormData(form)

        const brandName = formdata.get('brandName')
        const logo = formdata.get('brandLogo')

        if(!brandName || !logo.name){
            Swal.fire({
                icon:'error',
                title:'All fields are required',
                text:'Please fill all details',
                confirmButtonColor:'#dc3545'
            })
            return
        }

        const allowedTypes = ["image/jpeg", "image/png"];
        if (!allowedTypes.includes(logo.type)) {
            Swal.fire({
                icon: 'error',
                title: 'Invalid File Type',
                text: 'Only JPG or PNG images are allowed.',
                confirmButtonColor: '#dc3545'
            });
            return;
        }

        try{
            const response = await fetch('/admin/addBrand',{
                method:'POST',
                body:formdata
            })
            const result = await response.json()
            if(result.success){
                Swal.fire({
                    icon:'success',
                    title:'Success!',
                    text:result.message,
                    confirmButtonColor: '#198754'
                }).then(()=>{
                    window.location.reload()
                })
            }else{
                Swal.fire({
                    icon:'error',
                    title:'Error',
                    text:result.message,
                    confirmButtonColor: '#dc3545'
                })
            }
        }catch(error){
            Swal.fire({
                icon:'error',
                title:'Server Error',
                text:"Something went wrong",
                confirmButtonColor: '#dc3545'
            })
        }
    }

    function openAddOfferModal(id){
        document.getElementById('offerBrandId').value = id;
        const offerModal = new bootstrap.Modal(document.getElementById('addOfferModal'));
        offerModal.show();
    }

    async function addBrandOffer(e){
        e.preventDefault()
        const form=document.getElementById('addOfferForm')
        const formdata=new FormData(form)
        const offerPercentage=formdata.get('offerPercentage')
        const startDate=formdata.get('startDate')
        const endDate=formdata.get('endDate')
        const brandId=document.getElementById('offerBrandId').value
        const now=new Date()

        if(!offerPercentage||!startDate||!endDate){
            Swal.fire({
                icon:'error',
                title:'All fields are required',
                text:'Please fill al details',
                confirmButtonColor:'#dc3545'
            })
            return
        }

        if(new Date(startDate)>new Date(endDate)){
            Swal.fire({
                icon:'error',
                title:'Dates are not valid',
                text:'Start date should be less than end date',
                confirmButtonColor:'#dc3545'
            })
            return
        }
        if(offerPercentage<0||offerPercentage>100){
            Swal.fire({
                icon:'error',
                title:'Invalid offer',
                text:'Offer percentage between 0 and 99',
                confirmButtonColor:'#dc3545'
            })
            return
        }

        try{
            const response=await fetch('/admin/addBrandOffer',{
                method:'POST',
                headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        brandId: brandId,
                        offer: offerPercentage,
                        startDate,
                        endDate
                    })
            })

            const result=await response.json()
            if(result.success){
                Swal.fire({
                    icon:'success',
                    title:'Success!',
                    text:result.message,
                    confirmButtonColor: '#198754'
                }).then(()=>{
                    window.location.reload()
                })
            }else{
                Swal.fire({
                    icon:'error',
                    title:'Error',
                    text:result.message,
                    confirmButtonColor: '#dc3545'
                })
            }
        }catch(error){
            Swal.fire({
                icon:'error',
                title:'Server Error',
                text:"Something went wrong",
                confirmButtonColor: '#dc3545'
            })
        }

    }

    function setEditmodal(id,brandName,logo){
        document.getElementById('edit-brand-id').value=id
        document.getElementById('edit-brand-name').value=brandName
        document.getElementById('existing-brand-image').src = '/uploads/brands/' + logo;
    }

    async function editBrand(e){
        e.preventDefault();
        const form = document.getElementById('editBrandForm')
        const formdata = new FormData(form)

        const brandName = formdata.get('brandName')
        const logo = formdata.get('brandLogo')

        
 if (!brandName.trim()) {
        Swal.fire({
            icon: 'error',
            title: 'Missing Brand Name',
            text: 'Please enter a brand name',
            confirmButtonColor: '#dc3545'
        });
        return;
    }

    
    if (logo && logo.size > 0) {
        const allowedTypes = ["image/jpeg", "image/png"];
        if (!allowedTypes.includes(logo.type)) {
            Swal.fire({
                icon: 'error',
                title: 'Invalid File Type',
                text: 'Only JPG or PNG images are allowed.',
                confirmButtonColor: '#dc3545'
            });
            return;
        }
    }

        try{
            const response = await fetch('/admin/editBrand',{
                method:'PATCH',
                body:formdata
            })
            const result = await response.json()
            if(result.success){
                Swal.fire({
                    icon:'success',
                    title:'Success!',
                    text:result.message,
                    confirmButtonColor: '#198754'
                }).then(()=>{
                    window.location.reload()
                })
            }else{
                Swal.fire({
                    icon:'error',
                    title:'Error',
                    text:result.message,
                    confirmButtonColor: '#dc3545'
                })
            }
        }catch(error){
            Swal.fire({
                icon:'error',
                title:'Server Error',
                text:"Something went wrong",
                confirmButtonColor: '#dc3545'
            })
        }
    }
    //unlist  brand
    function unlistBrand(brandId) {
                Swal.fire({
                title: 'Are you sure?',
                text: "This will unlist the Brand!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Unlist!'
                }).then((result) => {
                if (result.isConfirmed) {
                    fetch('/admin/unlistBrand', {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ brandId })
                    })
                    .then(response => response.json())
                    .then(data => {
                    if (data.success) {
                        Swal.fire(
                        'Unlisted!',
                        'The Brand unlisted Succesfully.',
                        'success'
                        ).then(() => {
                        location.reload();
                        });
                    } else {
                        Swal.fire(
                        'Error!',
                        data.message || 'Failed to unlist.',
                        'error'
                        );
                    }
                    })
                    .catch(error => {
                    Swal.fire(
                        'Error!',
                        'Something went wrong while unlisting the category.',
                        'error'
                    );
                    });
                }
                });
            }

            //list  brand
    function listBrand(brandId) {
                Swal.fire({
                title: 'Are you sure?',
                text: "This will list the Brand!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'list!'
                }).then((result) => {
                if (result.isConfirmed) {
                    fetch('/admin/listBrand', {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ brandId })
                    })
                    .then(response => response.json())
                    .then(data => {
                    if (data.success) {
                        Swal.fire(
                        'Unlisted!',
                        'The Brand listed Succesfully.',
                        'success'
                        ).then(() => {
                        location.reload();
                        });
                    } else {
                        Swal.fire(
                        'Error!',
                        data.message || 'Failed to list.',
                        'error'
                        );
                    }
                    })
                    .catch(error => {
                    Swal.fire(
                        'Error!',
                        'Something went wrong while listing the category.',
                        'error'
                    );
                    });
                }
                });
            }
            //remove offer
            function removeOffer(brandId) {
                Swal.fire({
                title: 'Are you sure?',
                text: "This will remove the offer!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Remove!'
                }).then((result) => {
                if (result.isConfirmed) {
                    fetch('/admin/removeOffer', {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ brandId })
                    })
                    .then(response => response.json())
                    .then(data => {
                    if (data.success) {
                        Swal.fire(
                        'Offer removed!',
                        data.message,
                        'success'
                        ).then(() => {
                        location.reload();
                        });
                    } else {
                        Swal.fire(
                        'Error!',
                        data.message || 'Failed to remove offer.',
                        'error'
                        );
                    }
                    })
                    .catch(error => {
                    Swal.fire(
                        'Error!',
                        'Something went wrong while removing offer.',
                        'error'
                    );
                    });
                }
                });
            }

            //delete brand
            function deleteBrand(brandId) {
                Swal.fire({
                title: 'Are you sure?',
                text: "This will delete the brand!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Delete!'
                }).then((result) => {
                if (result.isConfirmed) {
                    fetch('/admin/deleteBrand', {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ brandId })
                    })
                    .then(response => response.json())
                    .then(data => {
                    if (data.success) {
                        Swal.fire(
                        'Brand Deleted!',
                        data.message,
                        'success'
                        ).then(() => {
                        location.reload();
                        });
                    } else {
                        Swal.fire(
                        'Error!',
                        data.message || 'Failed to delete brand.',
                        'error'
                        );
                    }
                    })
                    .catch(error => {
                    Swal.fire(
                        'Error!',
                        'Something went wrong while removing offer.',
                        'error'
                    );
                    });
                }
                });
            }


</script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
